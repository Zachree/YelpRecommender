package btree;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author zachf
 */
public class BusinessPickerGUI extends javax.swing.JFrame {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String[] randomTenBusinesses;
	private static String[] cluster;
    private String[] medoidsNames;// = recommender.getMedoidNames();
    private String[] medoidsIDs;// = recommender.getMedoidIDs();
    private static BusinessRecommender recommender;

    /**
     * Creates new form BusinessPickerGUI
     */
    public BusinessPickerGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        jFrame3 = new javax.swing.JFrame();
        button2 = new javax.swing.JButton();
        button3 = new javax.swing.JButton();
        button4 = new javax.swing.JButton();
        button1 = new javax.swing.JButton();
        button5 = new javax.swing.JButton();
        button7 = new javax.swing.JButton();
        button8 = new javax.swing.JButton();
        button9 = new javax.swing.JButton();
        button6 = new javax.swing.JButton();
        button10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        
        /*
        jButton12.setText(medoidsNames[0]);
        jButton13.setText(medoidsNames[1]);
        jButton14.setText(medoidsNames[2]);
        jButton15.setText(medoidsNames[3]);
        jButton16.setText(medoidsNames[4]);*/

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame3Layout = new javax.swing.GroupLayout(jFrame3.getContentPane());
        jFrame3.getContentPane().setLayout(jFrame3Layout);
        jFrame3Layout.setHorizontalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame3Layout.setVerticalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Similar Business Recommender");

        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });

        button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button3ActionPerformed(evt);
            }
        });

        button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button4ActionPerformed(evt);
            }
        });

        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        button5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button5ActionPerformed(evt);
            }
        });

        button7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button7ActionPerformed(evt);
            }
        });

        button8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button8ActionPerformed(evt);
            }
        });

        button9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button9ActionPerformed(evt);
            }
        });

        button6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button6ActionPerformed(evt);
            }
        });

        button10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button10ActionPerformed(evt);
            }
        });

        jButton11.setText("Get Businesses...");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setText("Generate Medoids");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(button4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button5, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(button6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button9, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(button10, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 140, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton16, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE))
                .addGap(93, 93, 93))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(255, 255, 255)
                .addComponent(jButton11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton17)
                .addGap(131, 131, 131))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(button6, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(button7, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(button8, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(button9, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(button10, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                            .addComponent(jButton16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            String business = this.button1.getText();
            String[] recommendations = recommender.getRecommendations(business);

            JFrame frame2 = new JFrame("Similar Businesses");
            frame2.setVisible(true);
            frame2.setSize(1000,100);
            JPanel panel = new JPanel();
            JLabel label = new JLabel(recommendations[0]);
            panel.add(label);
            int i = 1;
            while(i < recommendations.length){
                if(recommendations[i] != null){
                    label = new JLabel("| " + recommendations[i]);
                    frame2.add(panel);
                    panel.add(label);
                }
                i++;
            }
        } catch (IOException ex) {
            Logger.getLogger(BusinessPickerGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void button2ActionPerformed(java.awt.event.ActionEvent evt) {                                        

        try {
            String business = this.button2.getText();
            String[] recommendations = recommender.getRecommendations(business);
            
            JFrame frame2 = new JFrame("Similar Businesses");
            frame2.setVisible(true);
            frame2.setSize(1000,100);
            JPanel panel = new JPanel();
            JLabel label = new JLabel(recommendations[0]);
            panel.add(label);
            int i = 1;
            while(i < recommendations.length){
                if(recommendations[i] != null){
                    label = new JLabel("| " + recommendations[i]);
                    frame2.add(panel);
                    panel.add(label);
                }
                i++;
            }
        } catch (IOException ex) {
            Logger.getLogger(BusinessPickerGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                       

    private void button3ActionPerformed(java.awt.event.ActionEvent evt) {                                        

        try {
            String business = this.button3.getText();
            String[] recommendations = recommender.getRecommendations(business);
            
            JFrame frame2 = new JFrame("Similar Businesses");
            frame2.setVisible(true);
            frame2.setSize(1000,100);
            JPanel panel = new JPanel();
            JLabel label = new JLabel(recommendations[0]);
            panel.add(label);
            int i = 1;
            while(i < recommendations.length){
                if(recommendations[i] != null){
                    label = new JLabel("| " + recommendations[i]);
                    frame2.add(panel);
                    panel.add(label);
                }
                i++;
            }
        } catch (IOException ex) {
            Logger.getLogger(BusinessPickerGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                       

    private void button4ActionPerformed(java.awt.event.ActionEvent evt) {                                        

        try {
            String business = this.button4.getText();
            String[] recommendations = recommender.getRecommendations(business);
            
            JFrame frame2 = new JFrame("Similar Businesses");
            frame2.setVisible(true);
            frame2.setSize(1000,100);
            JPanel panel = new JPanel();
            JLabel label = new JLabel(recommendations[0]);
            panel.add(label);
            int i = 1;
            while(i < recommendations.length){
                if(recommendations[i] != null){
                    label = new JLabel("| " + recommendations[i]);
                    frame2.add(panel);
                    panel.add(label);
                }
                i++;
            }
        } catch (IOException ex) {
            Logger.getLogger(BusinessPickerGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                       

    private void button5ActionPerformed(java.awt.event.ActionEvent evt) {                                        

        try {
            String business = this.button5.getText();
            String[] recommendations = recommender.getRecommendations(business);
            
            JFrame frame2 = new JFrame("Similar Businesses");
            frame2.setVisible(true);
            frame2.setSize(1000,100);
            JPanel panel = new JPanel();
            JLabel label = new JLabel(recommendations[0]);
            panel.add(label);
            int i = 1;
            while(i < recommendations.length){
                if(recommendations[i] != null){
                    label = new JLabel("| " + recommendations[i]);
                    frame2.add(panel);
                    panel.add(label);
                }
                i++;
            }
        } catch (IOException ex) {
            Logger.getLogger(BusinessPickerGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void button6ActionPerformed(java.awt.event.ActionEvent evt) {

        try {
            String business = this.button6.getText();
            String[] recommendations = recommender.getRecommendations(business);

            JFrame frame2 = new JFrame("Similar Businesses");
            frame2.setVisible(true);
            frame2.setSize(1000,100);
            JPanel panel = new JPanel();
            JLabel label = new JLabel(recommendations[0]);
            panel.add(label);
            int i = 1;
            while(i < recommendations.length){
                if(recommendations[i] != null){
                    label = new JLabel("| " + recommendations[i]);
                    frame2.add(panel);
                    panel.add(label);
                }
                i++;
            }
        } catch (IOException ex) {
            Logger.getLogger(BusinessPickerGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void button7ActionPerformed(java.awt.event.ActionEvent evt) {                                        

        try {
            String business = this.button7.getText();
            String[] recommendations = recommender.getRecommendations(business);
            
            JFrame frame2 = new JFrame("Similar Businesses");
            frame2.setVisible(true);
            frame2.setSize(1000,100);
            JPanel panel = new JPanel();
            JLabel label = new JLabel(recommendations[0]);
            panel.add(label);
            int i = 1;
            while(i < recommendations.length){
                if(recommendations[i] != null){
                    label = new JLabel("| " + recommendations[i]);
                    frame2.add(panel);
                    panel.add(label);
                }
                i++;
            }
        } catch (IOException ex) {
            Logger.getLogger(BusinessPickerGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                       

    private void button8ActionPerformed(java.awt.event.ActionEvent evt) {                                        

        try {
            String business = this.button8.getText();
            String[] recommendations = recommender.getRecommendations(business);
            
            JFrame frame2 = new JFrame("Similar Businesses");
            frame2.setVisible(true);
            frame2.setSize(1000,100);
            JPanel panel = new JPanel();
            JLabel label = new JLabel(recommendations[0]);
            panel.add(label);
            int i = 1;
            while(i < recommendations.length){
                if(recommendations[i] != null){
                    label = new JLabel("|  " + recommendations[i]);
                    frame2.add(panel);
                    panel.add(label);
                }
                i++;
            }
        } catch (IOException ex) {
            Logger.getLogger(BusinessPickerGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                       

    private void button9ActionPerformed(java.awt.event.ActionEvent evt) {                                        

        try {
            String business = this.button9.getText();
            String[] recommendations = recommender.getRecommendations(business);
            
            JFrame frame2 = new JFrame("Similar Businesses");
            frame2.setVisible(true);
            frame2.setSize(1000,100);
            JPanel panel = new JPanel();
            JLabel label = new JLabel(recommendations[0]);
            panel.add(label);
            int i = 1;
            while(i < recommendations.length){
                if(recommendations[i] != null){
                    label = new JLabel("| " + recommendations[i]);
                    frame2.add(panel);
                    panel.add(label);
                }
                i++;
            }
        } catch (IOException ex) {
            Logger.getLogger(BusinessPickerGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                       

    private void button10ActionPerformed(java.awt.event.ActionEvent evt) {                                         

        try {
            String business = this.button10.getText();
            String[] recommendations = recommender.getRecommendations(business);
            
            JFrame frame2 = new JFrame("Similar Businesses");
            frame2.setVisible(true);
            frame2.setSize(1000,100);
            JPanel panel = new JPanel();
            JLabel label = new JLabel(recommendations[0]);
            panel.add(label);
            int i = 1;
            while(i < recommendations.length){
                if(recommendations[i] != null){
                    label = new JLabel("| " + recommendations[i]);
                    frame2.add(panel);
                    panel.add(label);
                }
                i++;
            }
        } catch (IOException ex) {
            Logger.getLogger(BusinessPickerGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            randomTenBusinesses = BusinessRecommender.getRandomBusinesses();
            button1.setText(randomTenBusinesses[0]);
            button2.setText(randomTenBusinesses[1]);
            button3.setText(randomTenBusinesses[2]);
            button4.setText(randomTenBusinesses[3]);
            button5.setText(randomTenBusinesses[4]);
            button6.setText(randomTenBusinesses[5]);
            button7.setText(randomTenBusinesses[6]);
            button8.setText(randomTenBusinesses[7]);
            button9.setText(randomTenBusinesses[8]);
            button10.setText(randomTenBusinesses[9]);
        } catch (IOException ex) {
            Logger.getLogger(BusinessPickerGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {
        	String business = this.jButton12.getText();
        	String businessID = medoidsIDs[0];
            cluster = recommender.getCluster(businessID);
            
            JFrame frame2 = new JFrame(business + "'s Business Cluster");
            frame2.setVisible(true);
            frame2.setSize(1000,100);
            JPanel panel = new JPanel();
            JLabel label = new JLabel("# of associations: " + cluster.length + " | NEAREST BUSINESS: " + BusinessRecommender.nearestBusiness);
            panel.add(label);
            int i = 0;
            while(i < cluster.length){
                if(cluster[i] != null){
                    label = new JLabel("|  " + cluster[i]);
                    frame2.add(panel);
                    panel.add(label);
                }
                i++;
            }
    }                                         

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) { 
        	String business = this.jButton13.getText();
        	String businessID = medoidsIDs[1];
            cluster = recommender.getCluster(businessID);
            
            JFrame frame2 = new JFrame(business + "'s Business Cluster");
            frame2.setVisible(true);
            frame2.setSize(1000,100);
            JPanel panel = new JPanel();
            JLabel label = new JLabel("# of associations: " + cluster.length + " | NEAREST BUSINESS: " + BusinessRecommender.nearestBusiness);
            panel.add(label);
            int i = 0;
            while(i < cluster.length){
                if(cluster[i] != null){
                    label = new JLabel("|  " + cluster[i]);
                    frame2.add(panel);
                    panel.add(label);
                }
                i++;
            }
    }                                         

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {   
        	String business = this.jButton14.getText();
        	String businessID = medoidsIDs[2];
            cluster = recommender.getCluster(businessID);
            
            JFrame frame2 = new JFrame(business + "'s Business Cluster");
            frame2.setVisible(true);
            frame2.setSize(1000,100);
            JPanel panel = new JPanel();
            JLabel label = new JLabel("# of associations: " + cluster.length + " | NEAREST BUSINESS: " + BusinessRecommender.nearestBusiness);
            panel.add(label);
            int i = 0;
            while(i < cluster.length){
                if(cluster[i] != null){
                    label = new JLabel("|  " + cluster[i]);
                    frame2.add(panel);
                    panel.add(label);
                }
                i++;
            }
    }                                         

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {     
        	String business = this.jButton15.getText();
        	String businessID = medoidsIDs[3];
            cluster = recommender.getCluster(businessID);
            
            JFrame frame2 = new JFrame(business + "'s Business Cluster");
            frame2.setVisible(true);
            frame2.setSize(1000,100);
            JPanel panel = new JPanel();
            JLabel label = new JLabel("# of associations: " + cluster.length + " | NEAREST BUSINESS: " + BusinessRecommender.nearestBusiness);
            panel.add(label);
            int i = 0;
            while(i < cluster.length){
                if(cluster[i] != null){
                    label = new JLabel("|  " + cluster[i]);
                    frame2.add(panel);
                    panel.add(label);
                }
                i++;
            }
    }                                         

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {                                  
        	String business = this.jButton16.getText();
        	String businessID = medoidsIDs[4];
            cluster = recommender.getCluster(businessID);
            
            JFrame frame2 = new JFrame(business + "'s Business Cluster");
            frame2.setVisible(true);
            frame2.setSize(1000,100);
            JPanel panel = new JPanel();
            JLabel label = new JLabel("# of associations: " + cluster.length + " | NEAREST BUSINESS: " + BusinessRecommender.nearestBusiness);
            panel.add(label);
            int i = 0;
            while(i < cluster.length){
                if(cluster[i] != null){
                    label = new JLabel("|  " + cluster[i]);
                    frame2.add(panel);
                    panel.add(label);
                }
                i++;
            }
    }                                         

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {
    		recommender.createClusters();
    		medoidsNames = recommender.getMedoidNames();
    		medoidsIDs = recommender.getMedoidIDs();
            jButton12.setText(medoidsNames[0]);
            jButton13.setText(medoidsNames[1]);
            jButton14.setText(medoidsNames[2]);
            jButton15.setText(medoidsNames[3]);
            jButton16.setText(medoidsNames[4]);
    }                                         

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
        
        recommender = new BusinessRecommender();

        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BusinessPickerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BusinessPickerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BusinessPickerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BusinessPickerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new BusinessPickerGUI().setVisible(true));
    }

    // Variables declaration - "do not modify"
    private javax.swing.JButton button1;
    private javax.swing.JButton button10;
    private javax.swing.JButton button2;
    private javax.swing.JButton button3;
    private javax.swing.JButton button4;
    private javax.swing.JButton button5;
    private javax.swing.JButton button6;
    private javax.swing.JButton button7;
    private javax.swing.JButton button8;
    private javax.swing.JButton button9;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JFrame jFrame3;
    // End of variables declaration                   
}
